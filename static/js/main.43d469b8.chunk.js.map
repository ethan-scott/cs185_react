{"version":3,"sources":["Home.js","Images.js","Videos.js","Links.js","App.js","serviceWorker.js","index.js"],"names":["Home","src","height","width","Component","Images","props","state","closeLightBox","bind","a","imgsrc","console","log","this","setState","enableLB","id","class","onClick","openLightBox","Videos","vidnum","controls","type","Links","href","App","changeActive","active","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.43d469b8.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {TinyButton as ScrollUpButton} from \"react-scroll-up-button\";\nimport './index.css';\n\nclass Home extends Component{\n\n    render(){\n        return (\n            <div>\n            <br></br>\n            <div>\n                <ScrollUpButton />\n            </div>\n            <h3>Personal Bio - Ethan Scott</h3>\n            <p> &emsp; Welcome to my website. I'm a computer science student at UCSB, and \n                I'm currently in my second year. I hope to learn more about website design and user \n                interfaces in this class. </p>\n            <br></br>\n            <img src=\"./images/ucsb.jpg\" height=\"100\" width=\"130\"></img>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.css';\nimport {TinyButton as ScrollUpButton} from \"react-scroll-up-button\";\n\n\nclass Images extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            \"enableLB\": false,\n            \"imgsrc\": \"/images/whitney.jpg\"\n        }\n        this.closeLightBox = this.closeLightBox.bind(this);\n    }\n    \n    openLightBox(a){\n        var imgsrc = \"./images/\" + a + \".jpg\";\n        console.log(imgsrc);\n        this.setState({\n            \"enableLB\": true,\n            \"imgsrc\": imgsrc\n         })\n         console.log(this.state)\n    }\n    \n    closeLightBox(){\n        this.setState({\n            \"enableLB\": false\n        })\n        console.log(this.state)\n    }\n\n    render(){\n        if (!this.state.enableLB){\n        return(\n            <div>\n                <br></br>\n                <h3 id=\"imgTitle\"> Summer 2019, Images </h3>\n                <div>\n                    <ScrollUpButton />\n                </div>\n                <div id=\"pictureGrid\" class=\"container\">\n                        <img id=\"river\" src=\"./images/river.jpg\" onClick={() => this.openLightBox('river')} />\n                        <img id=\"whitney\" src=\"./images/whitney.jpg\" onClick={() => this.openLightBox('whitney')} />\n                        <img id=\"rocks\" src=\"./images/rocks.jpg\" onClick={() => this.openLightBox('rocks')} />\n                        <img id=\"lake\" src=\"./images/lake.jpg\" onClick={() => this.openLightBox('lake')} />\n                        <img id=\"sunset\" src=\"./images/sunset.jpg\" onClick={() => this.openLightBox('sunset')} />\n                        <img id=\"trees\" src=\"./images/trees.jpg\" onClick={() => this.openLightBox('trees')} />\n                        <img id=\"canyon\" src=\"./images/canyon.jpg\" onClick={() => this.openLightBox('canyon')} />\n                        <img id=\"mountain\" src=\"./images/mountain.jpg\" onClick={() => this.openLightBox('mountain')} />\n                        <img id=\"tent\" src=\"./images/tent.jpg\" onClick={() => this.openLightBox('tent')} />\n                </div>\n            </div>\n        )\n        }\n        return(\n            <div>\n                <div id=\"LightBox\" class=\"LBox\">\n                    <button onClick={this.closeLightBox}>Close LightBox</button>\n                    <img id=\"LBimg\" src={this.state.imgsrc}></img>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Images","import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {TinyButton as ScrollUpButton} from \"react-scroll-up-button\";\nimport './index.css';\n\nclass Videos extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            \"vidnum\": 0\n        }\n        this.closeLightBox = this.closeLightBox.bind(this);\n    }\n\n    openLightBox(a){\n        this.setState({\"vidnum\": a})\n    }\n    \n    closeLightBox(){\n        this.setState({\"vidnum\": 0})\n    }\n\n    render(){\n        if (this.state.vidnum == 1){\n            return(\n            <div>\n                <br/>\n                <div class=\"close\">\n                    <button onClick={this.closeLightBox}>Close LightBox</button>\n                </div>\n                <div id=\"LightBox1\" class=\"LBoxV\">\n                    <video id=\"LBvid1\" width=\"500\" height = \"380\" controls>\n                        <source src=\"./images/vid1.mp4\" type=\"video/MP4\" />\n                    </video>        \n                </div>\n            </div>\n            )\n        } else if (this.state.vidnum == 3){\n            return(\n                <div>\n                    <br/>\n                    <div class=\"close\">\n                        <button onClick={this.closeLightBox}>Close LightBox</button>\n                    </div>\n                    <div id=\"LightBox3\" class=\"LBoxV\">\n                        <video id=\"LBvid3\" width=\"500\" height = \"380\" controls>\n                            <source src=\"./images/vid3.mp4\" type=\"video/MP4\" />\n                        </video>        \n                    </div>\n                </div>\n                )\n        }else{\n            return(\n                <div>\n                    <br/>\n                    <h3> Summer 2019, Videos </h3>\n                    <div>\n                        <ScrollUpButton />\n                    </div>\n                    <div id=\"videoGrid\" class=\"container\">\n                        <video onClick={() => this.openLightBox(1)} width=\"320\" height=\"240\" controls>\n                            <source src=\"./images/vid1.mp4\" type=\"video/MP4\" />\n                        </video>\n                        <video onClick={() => this.openLightBox(3)} width=\"320\" height=\"240\" controls>\n                            <source src=\"./images/vid3.mp4\" type=\"video/MP4\" />\n                        </video>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Videos","import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {TinyButton as ScrollUpButton} from \"react-scroll-up-button\";\nimport {Link} from 'react-router-dom';\nimport './index.css';\n\nclass Links extends Component{\n\n    render(){\n        return (\n            <div>\n                <br />\n                <div>\n                    <ScrollUpButton />\n                </div>\n                <h3>External Links</h3>\n                <br />\n                <div id=\"project\">\n                    <a href=\"https://github.com/ucsb-ersp-2019/ersp_architecture\"><img src=\"./images/github.png\" />  ERSP Architecture</a>\n                </div> \n                <div id=\"project\">\n                    <a href=\"https://github.com/ethan-scott/CS185\"><img src=\"./images/github.png\" />  CS185 Repository</a>\n                </div>\n                <div id=\"project\">\n                    <a href=\"https://engineering.ucsb.edu/\"><img src=\"./images/ucsb.jpg\" />   UCSB College of Engineering</a>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Links\n","import * as React from 'react';\nimport {Component} from 'react';\nimport {HashRouter, Switch, Route, withRouter, BrowserRouter} from 'react-router-dom';\nimport './App.css';\nimport Home from './Home.js';\nimport Images from './Images.js';\nimport Videos from './Videos.js';\nimport Links from './Links.js';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        \"active\": 1,\n    }\n    this.changeActive = this.changeActive.bind(this);\n}\n\nchangeActive(a){\n    this.setState({\n        \"active\": a\n    })\n}\n\nrender(){\n  if(this.state.active == 1){\n    return(\n      <div>\n      <div id=\"nav\">\n        <u1>\n            <li><a class=\"current\" onClick={() => this.changeActive(1)}>Home</a></li>\n            <li><a onClick={() => this.changeActive(2)}>Images</a></li>\n            <li><a onClick={() => this.changeActive(3)}>Videos</a></li>\n            <li><a onClick={() => this.changeActive(4)}>Links</a></li>\n        </u1>\n      </div>\n      <Home />\n      </div>\n    )\n  }\n  if(this.state.active == 2){\n    return(\n    <div>\n    <div id=\"nav\">\n      <u1>\n          <li><a onClick={() => this.changeActive(1)}>Home</a></li>\n          <li><a class=\"current\" onClick={() => this.changeActive(2)}>Images</a></li>\n          <li><a onClick={() => this.changeActive(3)}>Videos</a></li>\n          <li><a onClick={() => this.changeActive(4)}>Links</a></li>\n      </u1>\n    </div>\n    <Images />\n    </div>\n    )\n  }\n  if(this.state.active == 3){\n    return(\n    <div>\n    <div id=\"nav\">\n      <u1>\n          <li><a onClick={() => this.changeActive(1)}>Home</a></li>\n          <li><a onClick={() => this.changeActive(2)}>Images</a></li>\n          <li><a class=\"current\" onClick={() => this.changeActive(3)}>Videos</a></li>\n          <li><a onClick={() => this.changeActive(4)}>Links</a></li>\n      </u1>\n    </div>\n    <Videos />\n    </div>\n    )\n  }\n  if(this.state.active == 4){\n    return(\n    <div>\n    <div id=\"nav\">\n      <u1>\n          <li><a onClick={() => this.changeActive(1)}>Home</a></li>\n          <li><a onClick={() => this.changeActive(2)}>Images</a></li>\n          <li><a onClick={() => this.changeActive(3)}>Videos</a></li>\n          <li><a class=\"current\" onClick={() => this.changeActive(4)}>Links</a></li>\n      </u1>\n    </div>\n    <Links />\n    </div>\n    )\n  }\n}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}